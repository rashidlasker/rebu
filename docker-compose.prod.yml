version: '3.7'
services:
  models:
    image: awh4kc/rebu-microservices
    build:
      context: ./app/microservices
      dockerfile: Dockerfile.microservices
    container_name: models
    restart: always
    networks:
      db_network:
        aliases:
          - models
      main_network:
        aliases:
          - models-api
          - models
      mod_exp_network:
        aliases:
          - models-api
          - models
    depends_on:
      - "es"

  exp:
    image: awh4kc/rebu-exp
    build:
      context: ./app/exp
      dockerfile: Dockerfile.exp
    container_name: exp
    restart: always
    networks:
      mod_exp_network:
        aliases:
          - exp-api
      main_network:
        aliases:
          - exp-api
    depends_on:
      - "models"
      - "kafka"
      - "es"

  web:
    image: awh4kc/rebu-web
    build:
      context: ./app/web
      dockerfile: Dockerfile.web
    container_name: web
    restart: always
    networks:
      - main_network
    depends_on:
      - "exp"

  webb:
    image: awh4kc/rebu-webb
    build:
      context: ./app/web
      dockerfile: Dockerfile.web
    container_name: webb
    restart: always
    networks:
      - main_network
    depends_on:
      - "exp"

  kafka:
    image: spotify/kafka
    container_name: kafka
    restart: always
    networks:
      - batch_network
      - mod_exp_network
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

  es:
    image: elasticsearch:2.0
    container_name: es
    networks:
      - batch_network
      - mod_exp_network

  batch:
    image: awh4kc/rebu-batch
    build:
      context: ./app/batch
      dockerfile: ./Dockerfile.batch
    container_name: batch
    restart: always
    volumes:
      - data_vol:/tmp/data
    networks:
      - batch_network
    depends_on:
      - "kafka"
      - "es"

  balancer:
    image: awh4kc/rebu-balancer
    build:
      context: ./app/balancer
      dockerfile: Dockerfile.balancer
    container_name: balancer
    restart: always
    ports:
      -  "8000:8000"
      -  "1936:1936"
    expose:
      - 8000
    networks:
      - main_network
    depends_on:
      - "web"
      - "webb"
      - "exp"
      - "models"

  spark-master:
    image: awh4kc/rebu-spark-master
    build:
      context: ./app/spark
      dockerfile: ./Dockerfile.sparkMaster
    container_name: spark-master
    restart: always
    hostname: spark-master
    environment:
      MASTER: spark://spark-master:7077
      SPARK_CONF_DIR: /conf
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
    volumes:
      - data_vol:/tmp/data
    networks:
      - mod_exp_network
    depends_on:
      - "models"

  spark-worker:
    image: awh4kc/rebu-spark-worker
    build:
      context: ./app/spark
      dockerfile: ./Dockerfile.sparkWorker
    container_name: spark-worker
    restart: always
    hostname: spark-worker
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 512m
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
    networks:
      - mod_exp_network
    depends_on:
      - "spark-master"
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8881
    volumes:
      - data_vol:/tmp/data

networks:
  db_network:
    external:
      name: db_network
  batch_network:
    driver: bridge
  main_network:
    driver: bridge
  mod_exp_network:
    driver: bridge

volumes:
  data_vol:

